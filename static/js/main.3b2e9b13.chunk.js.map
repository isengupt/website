{"version":3,"sources":["shaders/XFadeShader.js","data/Chrome.gif","data/Particle1.gif","data/contemplations1.png","data/contemplations2.png","data/FDO1.png","data/FDO2.png","data/Group2.gif","data/Group1.png","data/RUST1.png","data/RUST2.png","data/Song1.png","data/Song2.png","img/displacement/8.jpg","img/displacement/1.jpg","img/displacement/2.jpg","img/displacement/3.jpg","img/displacement/4.png","img/displacement/5.png","img/displacement/6.jpg","img/displacement/7.jpg","data.js","img/displacement/9.jpg","img/displacement/10.jpg","img/displacement/11.jpg","img/displacement/13.jpg","img/displacement/15.jpg","Filter.js","Deck.js","App.js","reportWebVitals.js","index.js"],"names":["vertexShader","fragmentShader","cont1","cont2","disp8","title","info","langauges","link","FDO1","FDO2","ChromeGIF","Group2","RUST1","RUST2","Particle1","Song1","Song2","number","email","github","THREE","console","log","data","length","to","i","x","y","scale","rot","Math","random","delay","trans","r","s","loader","ImageWebgl","url1","url2","disp","intensity","hovered","progress","useSpring","invalidate","useThree","args","useMemo","texture1","load","texture2","dispTexture","wrapS","wrapT","magFilter","minFilter","uniforms","effectFactor","type","value","dispFactor","texture","name","shaderMaterial","uniforms-dispFactor-value","Image","props","useState","setHover","hover","useCallback","unhover","className","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","onTouchCancel","invalidateFrameloop","antialias","stencil","InfoCard","href","map","item","style","maxWidth","src","alt","Deck","Set","gone","useSprings","from","set","bind","useGesture","index","down","xDelta","delta","xDir","distance","direction","velocity","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","div","transform","interpolate","padding","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b2e9b13.chunk.js","sourcesContent":["// WebGL code from https://tympanus.net/Development/DistortionHoverEffect/\n\nconst vertexShader = `\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n  `\n\nconst fragmentShader = `\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform sampler2D texture2;\n  uniform sampler2D disp;\n  uniform float _rot;\n  uniform float dispFactor;\n  uniform float effectFactor;\n\n   vec2 rotate(vec2 v, float a) {\n    float s = sin(a);\n    float c = cos(a);\n    mat2 m = mat2(c, -s, s, c);\n    return m * v;\n   }\n\n  void main() {\n\n    vec2 uv = vUv;\n\n    vec4 disp = texture2D(disp, uv);\n\n    vec2 distortedPosition = vec2(uv.x + dispFactor * (disp.r*effectFactor), uv.y);\n    vec2 distortedPosition2 = vec2(uv.x - (1.0 - dispFactor) * (disp.r*effectFactor), uv.y);\n\n    vec4 _texture = texture2D(texture, distortedPosition);\n    vec4 _texture2 = texture2D(texture2, distortedPosition2);\n\n    vec4 finalTexture = mix(_texture, _texture2, dispFactor);\n\n    gl_FragColor = finalTexture;\n  }\n`\n\nexport { vertexShader, fragmentShader }\n","export default __webpack_public_path__ + \"static/media/Chrome.9baed56a.gif\";","export default __webpack_public_path__ + \"static/media/Particle1.d5e7ca82.gif\";","export default __webpack_public_path__ + \"static/media/contemplations1.5bb7be16.png\";","export default __webpack_public_path__ + \"static/media/contemplations2.d1db0cba.png\";","export default __webpack_public_path__ + \"static/media/FDO1.d979ae88.png\";","export default __webpack_public_path__ + \"static/media/FDO2.99561720.png\";","export default __webpack_public_path__ + \"static/media/Group2.e6af12ad.gif\";","export default __webpack_public_path__ + \"static/media/Group1.856322b6.png\";","export default __webpack_public_path__ + \"static/media/RUST1.61baee64.png\";","export default __webpack_public_path__ + \"static/media/RUST2.a6007fb3.png\";","export default __webpack_public_path__ + \"static/media/Song1.056d61e6.png\";","export default __webpack_public_path__ + \"static/media/Song2.4ac8fda9.png\";","export default __webpack_public_path__ + \"static/media/8.8f4bcb91.jpg\";","export default __webpack_public_path__ + \"static/media/1.a5527e2b.jpg\";","export default __webpack_public_path__ + \"static/media/2.ed1ba7bf.jpg\";","export default __webpack_public_path__ + \"static/media/3.94d88606.jpg\";","export default __webpack_public_path__ + \"static/media/4.dbbe511c.png\";","export default __webpack_public_path__ + \"static/media/5.4c9e6227.png\";","export default __webpack_public_path__ + \"static/media/6.ca8a386b.jpg\";","export default __webpack_public_path__ + \"static/media/7.bf80770f.jpg\";","import ChromeGIF from \"./data/Chrome.gif\";\nimport Particle1 from './data/Particle1.gif'\nimport cont1 from \"./data/contemplations1.png\";\nimport cont2 from \"./data/contemplations2.png\";\nimport FDO1 from \"./data/FDO1.png\";\nimport FDO2 from \"./data/FDO2.png\";\nimport Group1 from \"./data/Group1.png\";\nimport Group2 from \"./data/Group2.gif\";\nimport RUST1 from \"./data/RUST1.png\";\nimport RUST2 from \"./data/RUST2.png\";\nimport Song1 from \"./data/Song1.png\";\nimport Song2 from \"./data/Song2.png\";\n\n\nimport disp1 from \"./img/displacement/1.jpg\";\nimport disp2 from \"./img/displacement/2.jpg\";\nimport disp3 from \"./img/displacement/3.jpg\";\nimport disp4 from \"./img/displacement/4.png\";\nimport disp5 from \"./img/displacement/5.png\";\nimport disp6 from \"./img/displacement/6.jpg\";\nimport disp7 from \"./img/displacement/7.jpg\";\nimport disp8 from \"./img/displacement/8.jpg\";\nimport disp9 from \"./img/displacement/9.jpg\";\nimport disp10 from \"./img/displacement/10.jpg\";\nimport disp11 from \"./img/displacement/11.jpg\";\nimport disp13 from \"./img/displacement/13.jpg\";\nimport disp15 from \"./img/displacement/15.jpg\";\n\nlet ContemplationsInfo = {\n  title: \"Contemplation Book App\",\n  info: [\n    \"Created a mobile IOS application that uses OpenStreetMap API to allocate benches in users vicinity as contemplation book geocaches\",\n    \"Constructed a cascading system that would use a Swift Native module to tag sentiment of an user’s entry and spread the data up to the entire book and geolocation, creating a time series of sentiment\",\n  ],\n  langauges: 'React Native, Swift, MongoDB',\n  link: \"https://github.com/isengupt/ContemplationApp\"\n};\n\nlet FDOInfo = {\n  title: 'FDO Website',\n  info: [\n    \"Built a React, Meteor.js full stack web application that uses the publication and subscription pattern to dynamically update data from a MongoDB database to the client\",\n    \"Created multiple schemas for the events, announcements, and auxiliary data that would be produced by administrators and consumed by members of the club\",\n    \"Utilized Meteor’s global state capabilities to create a interface that would change for specified role and school at login and assign editing and event adding capabilities accordingly\"\n  ],\n  langauges: 'React, Meteor.js',\n  link: 'https://github.com/isengupt/FDOPages'\n} \n\n\nlet SongInfo = {\n  title: 'Song Map Visualizer',\n  info: ['A visualization of all songs on Wikipedia with their song attributes collected from the Spotify API along with their frequencies at the artists; primary location queried from a postgreSQL database'],\n  langauges: 'React, PostgreSQL',\n  link: 'https://github.com/isengupt/Wikipedia-Data-Projects'\n}\n\nlet RustInfo = {\n  title: 'Rust Dependencies Graph',\n  langauges: 'Javascript',\n  info: ['Modeled a dependency graph of science-based rust crates to four-level depth with Graph.gl and utilized D3 to visualize dependencies and reverse-dependencies in a tree based format'],\n  link: 'https://github.com/isengupt/Rust-Dependencies'\n}\n\nlet ParticleInfo = {\n  title: 'Epidemic Particle Simulation',\n\n  info: ['Simulated the spread of an infection through elastic interactions of particles in a closed space with the Matplotlib Animation program',\n'Utilized insights in epidemiology in order to accurately portray interactions between particles and gauge statistical chance of infection spread'\n],\nlangauges: 'Python',\n  link: 'https://github.com/isengupt/ParticleSimulation'\n}\n\nlet GroupInfo = {\n  title: 'Group Theory Visualizations',\n\n  info: ['Used p5.js sound and canvas libraries to create Tonnetz square and circle of chords visualization program on top of triad classes and functions',\n'Leveraged research in applications of abstract algebra on chord mapping to transform and manipulate musical triads and sevenths in algorithmic fashion'\n],\n  langauges: 'Javascript, P5.js',\n  link: 'https://github.com/isengupt/Music-Group-Theory'\n}\n\nlet ChromeInfo = {\n  title: 'Political Classifier Chrome Extension',\n\n  info: ['Chrome Extension that labels reddit posts based on democratic / republican sentiment using a political classifier keras model'],\n  langauges: 'Javascript, Python',\n  link: 'https://github.com/isengupt/PoliticalClassifierChome'\n}\n\n\nlet titleInfo = {\n  title: 'Ishan Sengupta',\n  number: '443-760-1159',\n  email: 'ishan6060@gmail.com',\n  github: 'https://github.com/isengupt'\n}\n\n\n\nexport default [\n\n  [cont1, cont2, disp8, -0.65, ContemplationsInfo],\n  [FDO1, FDO2, disp8, -0.65, FDOInfo],\n  [ChromeInfo, ChromeGIF],\n[GroupInfo, Group2],\n\n  [RUST1, RUST2, disp8, -0.65, RustInfo],\n\n  [ ParticleInfo, Particle1],\n  [Song1, Song2, disp8, -0.65, SongInfo],\n  [titleInfo]\n\n\n]\n","export default __webpack_public_path__ + \"static/media/9.4daf66a0.jpg\";","export default __webpack_public_path__ + \"static/media/10.94eb0f7e.jpg\";","export default __webpack_public_path__ + \"static/media/11.130fa6c0.jpg\";","export default __webpack_public_path__ + \"static/media/13.d58cf728.jpg\";","export default __webpack_public_path__ + \"static/media/15.a0903358.jpg\";","import React, { useState, useCallback, useMemo } from 'react'\nimport * as THREE from 'three/src/Three'\n\nimport { vertexShader, fragmentShader } from './shaders/XFadeShader'\n\nimport { Canvas, useThree } from 'react-three-fiber'\nimport { useSpring, animated as anim } from 'react-spring/three'\n\n\nimport data from './data'\nimport './styles.css'\n\nconst loader = new THREE.TextureLoader()\n\nfunction ImageWebgl({ url1, url2, disp, intensity, hovered }) {\n  const { progress } = useSpring({ progress: hovered ? 1 : 0 })\n  const { invalidate } = useThree()\n  const args = useMemo(\n    () => {\n      const texture1 = loader.load(url1, invalidate)\n      const texture2 = loader.load(url2, invalidate)\n      const dispTexture = loader.load(disp, invalidate)\n\n      dispTexture.wrapS = dispTexture.wrapT = THREE.RepeatWrapping\n      texture1.magFilter = texture2.magFilter = THREE.LinearFilter\n      texture1.minFilter = texture2.minFilter = THREE.LinearFilter\n\n      return {\n        uniforms: {\n          effectFactor: { type: 'f', value: intensity },\n          dispFactor: { type: 'f', value: 0 },\n          texture: { type: 't', value: texture1 },\n          texture2: { type: 't', value: texture2 },\n          disp: { type: 't', value: dispTexture }\n        },\n        vertexShader,\n        fragmentShader\n      }\n    },\n    [url1, url2, disp, intensity, invalidate]\n  )\n\n  return (\n    <mesh>\n      <planeBufferGeometry name=\"geometry\" args={[8, 8]} />\n      <anim.shaderMaterial name=\"material\" args={[args]} uniforms-dispFactor-value={progress} />\n    </mesh>\n  )\n}\n\nfunction Image(props) {\n  const [hovered, setHover] = useState(false)\n  const hover = useCallback(() => setHover(true), [])\n  const unhover = useCallback(() => setHover(false), [])\n  return (\n    <div\n      className=\"item\"\n      onMouseEnter={hover}\n      onMouseLeave={unhover}\n      onTouchStart={hover}\n      onTouchEnd={unhover}\n      onTouchCancel={unhover}\n    >\n      <Canvas\n        className=\"canvas\"\n        invalidateFrameloop={true}\n        props={{ antialias: false, stencil: false }}\n      >\n        <ImageWebgl {...props} hovered={hovered} />\n      </Canvas>\n    </div>\n  )\n}\n\nfunction Filter() {\n  return (\n    <div className=\"grid\">\n      {data.map(([url1, url2, disp, intensity, info], index) => (\n        <>\n        <Image key={index} url1={url1} url2={url2} disp={disp} intensity={intensity} />\n        <div>{info.info}</div>\n        </>\n      ))}\n    </div>\n  )\n\n}\n\nexport default Filter\n\n\n","import React, { useState, useCallback, useMemo } from 'react'\nimport { useSprings, animated, interpolate } from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport Project from './Project'\n\n\nimport * as THREE from 'three/src/Three'\n\nimport { vertexShader, fragmentShader } from './shaders/XFadeShader'\n\nimport { Canvas, useThree } from 'react-three-fiber'\nimport { useSpring, animated as anim } from 'react-spring/three'\n\n\nimport data from './data'\n\nimport './styles.css'\n\nconst cards = [\n  'https://upload.wikimedia.org/wikipedia/en/f/f5/RWS_Tarot_08_Strength.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/5/53/RWS_Tarot_16_Tower.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/9/9b/RWS_Tarot_07_Chariot.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/d/db/RWS_Tarot_06_Lovers.jpg',\n  'https://upload.wikimedia.org/wikipedia/en/thumb/8/88/RWS_Tarot_02_High_Priestess.jpg/690px-RWS_Tarot_02_High_Priestess.jpg',\n\n]\n\nconsole.log(data.length)\n\n\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\nconst to = i => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 })\nconst from = i => ({ x: 0, rot: 0, scale: 1.5, y: -1000 })\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\n\nconst loader = new THREE.TextureLoader()\n\nfunction ImageWebgl({ url1, url2, disp, intensity, hovered }) {\n  const { progress } = useSpring({ progress: hovered ? 1 : 0 })\n  const { invalidate } = useThree()\n  const args = useMemo(\n    () => {\n      const texture1 = loader.load(url1, invalidate)\n      const texture2 = loader.load(url2, invalidate)\n      const dispTexture = loader.load(disp, invalidate)\n\n      dispTexture.wrapS = dispTexture.wrapT = THREE.RepeatWrapping\n      texture1.magFilter = texture2.magFilter = THREE.LinearFilter\n      texture1.minFilter = texture2.minFilter = THREE.LinearFilter\n\n      return {\n        uniforms: {\n          effectFactor: { type: 'f', value: intensity },\n          dispFactor: { type: 'f', value: 0 },\n          texture: { type: 't', value: texture1 },\n          texture2: { type: 't', value: texture2 },\n          disp: { type: 't', value: dispTexture }\n        },\n        vertexShader,\n        fragmentShader\n      }\n    },\n    [url1, url2, disp, intensity, invalidate]\n  )\n\n  return (\n    <mesh>\n      <planeBufferGeometry name=\"geometry\" args={[8, 8]} />\n      <anim.shaderMaterial name=\"material\" args={[args]} uniforms-dispFactor-value={progress} />\n    </mesh>\n  )\n}\n\nfunction Image(props) {\n  const [hovered, setHover] = useState(false)\n  const hover = useCallback(() => setHover(true), [])\n  const unhover = useCallback(() => setHover(false), [])\n  return (\n    <div\n      className=\"item\"\n      onMouseEnter={hover}\n      onMouseLeave={unhover}\n      onTouchStart={hover}\n      onTouchEnd={unhover}\n      onTouchCancel={unhover}\n    >\n      <Canvas\n        className=\"canvas\"\n        invalidateFrameloop={true}\n        props={{ antialias: false, stencil: false }}\n      >\n        <ImageWebgl {...props} hovered={hovered} />\n      </Canvas>\n    </div>\n  )\n}\n\nfunction InfoCard(props) {\n\n  console.log(props.data)\n\n  if (props.data.length === 1) {\n    return (\n      <div className=\"title-card\">\n        <div className=\"title-name\">\n          {props.data[0].title}\n        </div>\n        <div className=\"subtitle-card\">\n          {props.data[0].number}\n        </div>\n        <div className=\"subtitle-card\">\n          {props.data[0].email}\n        </div>\n        <a href={props.data[0].github} className=\"subtitle-card\">\nGithub\n        </a>\n      </div>\n    )\n  } else if (props.data.length === 5) {\nreturn (\n  <div className=\"resume-card\">\n  <a href={props.data[4].link} className=\"title-name\">{props.data[4].title}</a>\n  <div className=\"resume-langaunge\"> <span className=\"header-subtitle\">Languages: </span>{props.data[4].langauges}</div>\n {props.data[4].info.map((item) => \n <p className=\"resume-bullets\">\n   {item}\n </p>\n )}\n  <Image className=\"faze-image\" url1={props.data[0]} url2={props.data[1]} disp={props.data[2]} intensity={props.data[3]} />\n  </div>\n)\n  }\n\n   else if (props.data.length === 2) {\n     return (\n\n      <div className=\"resume-card\">\n  <a href={props.data[0].link} className=\"title-name\">{props.data[0].title}</a>\n  <div className=\"resume-langaunge\"> <span className=\"header-subtitle\">Languages: </span>{props.data[0].langauges}</div>\n {props.data[0].info.map((item) => \n <p className=\"resume-bullets\">\n   {item}\n </p>\n )}\n <div style={{maxWidth: '100%'}}> \n <img className=\"faze-image\" src={props.data[1]} alt=\"loading...\" />\n </div>\n \n  </div>\n\n        \n\n\n     )\n   } else {\n     return (\n       <>\n       </>\n     )\n   }\n}\n\n\nfunction Deck() {\n  const [gone] = useState(() => new Set()) // The set flags all the cards that are flicked out\n  const [props, set] = useSprings(data.length, i => ({ ...to(i), from: from(i) })) // Create a bunch of springs using the helpers above\n  // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n  const bind = useGesture(({ args: [index], down, delta: [xDelta], distance, direction: [xDir], velocity }) => {\n    const trigger = velocity > 0.2 // If you flick hard enough it should trigger the card to fly out\n    const dir = xDir < 0 ? -1 : 1 // Direction should either point left or right\n    if (!down && trigger) gone.add(index) // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n    set(i => {\n      if (index !== i) return // We're only interested in changing spring-data for the current spring\n      const isGone = gone.has(index)\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0 // When a card is gone it flys out left or right, otherwise goes back to zero\n      const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0) // How much the card tilts, flicking it harder makes it rotate faster\n      const scale = down ? 1.1 : 1 // Active cards lift up a bit\n      return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\n    })\n    if (!down && gone.size === data.length) setTimeout(() => gone.clear() || set(i => to(i)), 600)\n  })\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n  return props.map(({ x, y, rot, scale }, i) => (\n    <animated.div key={i} style={{ transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}>\n   \n      {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\n      <animated.div {...bind(i)} style={{ padding: 10, transform: interpolate([rot, scale], trans)}}>\n      <InfoCard data={data[i]}/>\n\n      </animated.div>\n\n    </animated.div>\n  ))\n}\n\n//backgroundImage: `url(${cards[i]})` \nexport default Deck;\n","import Deck from './Deck'\n\nimport Filter from './Filter'\n\nfunction App() {\n  return (\n    <>\n \n    <Deck/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}